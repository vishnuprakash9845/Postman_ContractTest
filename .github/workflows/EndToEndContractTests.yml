# This is a basic workflow to help you get started with Actions

name: E2E Automated Contract API Tests using Newman CLI 

on: [push, workflow_dispatch]
  # # Triggers the workflow on push or pull request events but only for the "main" branch
  # schedule:
  #   - cron: "0 0 1 1 *"
  # workflow_dispatch:

jobs:
  test-api:
    runs-on: ubuntu-latest
    steps:
    # Checkout the repository
      - uses: actions/checkout@v3
      - name: Create dir
        run: |
         mkdir TestArtifact	  
    # Install the Python and Dependencies
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          echo Done
      - name: Start API Server
        run: |
          timeout 3 python test_api_basic/main.py || code=$?; if [[ $code -ne 124 && $code -ne 0 ]]; then exit $code; fi
          echo Done
    #Install Node on the runner
      - name: Install Node
        uses: actions/checkout@v3
        with:
          node-version: '16.x'	  
    #Install newman globally the reporter for slack and install the html extra reporter
      - name: Install newman
        run: |
         npm install -g newman
         npm install -g newman-reporter-htmlextra	 
    #Run the Postman Collection
      - name: Run Tests
        if: ${{ always() }}
        run: newman run "ContractTests.postman_collection.json" -r cli,htmlextra --reporter-htmlextra-export testArtifacts/htmlreport.html	
    #Upload the reports to TestArtifact directory
      - name: Output the results
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
         name: Reports
         path: testArtifacts
         
  test-api-ps:
    runs-on: ubuntu-latest
    steps:
    # Checkout the repository
      - uses: actions/checkout@v3
      - name: Create dir
        run: |
         mkdir TestArtifact	  
    # Install the Python and Dependencies
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          echo Done
      - name: Start API Server with Powershell
        shell: pwsh
        run: |
          timeout 3 python test_api_basic/main.py || code=$?; if [[ $code -ne 124 && $code -ne 0 ]]; then exit $code; fi
          echo Done
    #Install Node on the runner
      - name: Install Node
        uses: actions/checkout@v3
        with:
          node-version: '16.x'	  
    #Install newman globally the reporter for slack and install the html extra reporter
      - name: Install newman
        run: |
         npm install -g newman
         npm install -g newman-reporter-htmlextra	 
    #Run the Postman Collection
      - name: Run Tests
        if: ${{ always() }}
        run: newman run "ContractTests.postman_collection.json" -r cli,htmlextra --reporter-htmlextra-export testArtifacts/htmlreport.html	
    #Upload the reports to TestArtifact directory
      - name: Output the results
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
         name: Reports
         path: testArtifacts
